stages:
  - test
  - package
  - pre-deploy
  - deploy

cache:
  paths:
    - .m2/

image: maven:3.5-slim

variables:
   MAVEN_OPTS: -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
   VERSION: '1.7-SNAPSHOT'
   SERVER_NEXUS: '192.168.99.100:8580'
   SERVER_WILDFLY_NODE1: '192.168.99.100'
   SERVER_WILDFLY_NODE2: '192.168.99.100'
   SERVER_WILDFLY_PORT1: '9990'
   SERVER_WILDFLY_PORT2: '9991'

test:
  stage: test
  script:
   - mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=admin

deploy-nexus:
  stage: package
  script:
   - mvn deploy --settings settings.xml

get-artifacts:
  stage: pre-deploy
  image: gabylan/debian-wget
  artifacts:
      paths:
      - artifacts/
  script:
   - mkdir artifacts
   - wget -O artifacts/http.war http://$SERVER_NEXUS/nexus/service/local/artifact/maven/redirect?r=snapshots\&g=org.samples.wildfly.clustering\&a=http\&v=$VERSION\&p=war --output-document=artifacts/http.war

deploy_staging:
  stage: deploy
  image: jboss/wildfly:11.0.0.Final
  script:
     -   /opt/jboss/wildfly/bin/jboss-cli.sh -c controller=${SERVER_WILDFLY_NODE1}:{$SERVER_WILDFLY_PORT1} --user=admin --password='Admin#70365' --command="deploy --force artifacts/http.war"
  environment:
    name: staging
    url: https://192.168.99.100:8080
  dependencies:
   - get-artifacts
  only:
  - master

deploy_production:
  stage: deploy
  image: jboss/wildfly:11.0.0.Final
  script:
     -   /opt/jboss/wildfly/bin/jboss-cli.sh -c controller=${SERVER_WILDFLY_NODE2}:${SERVER_WILDFLY_PORT2} --user=admin --password='Admin#70365' --command="deploy --force artifacts/http.war"
  environment:
    name: production
    url: https://192.168.99.100:8081
  when: manual
  dependencies:
   - get-artifacts
  only:
  - master


